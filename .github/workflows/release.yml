name: Release

# Controls when the workflow will run
on:
  push:
    branches: [ master ]
    
jobs:
  checkout:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

  build-release:
    needs: checkout
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
          
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Bump pom.xml
        run: |
          echo "release_version1=${{ steps.tag_version.outputs.new_tag }}" >> $GITHUB_ENV
          echo "release_version2=$(${{ steps.tag_version.outputs.new_tag }}//[v]/)" >> $GITHUB_ENV
          echo "${{ env.release_version1 }}"
          echo "${{ env.release_version2 }}"
          mvn versions:set -DnewVersion=${{ env.release_version }}

      - name: Commit files
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com
          git commit -m "Update version to ${{ steps.tag_version.outputs.new_tag }} [skip ci]" -a
          git push origin master

      - name: Build
        run: |
          mvn package
          echo "artifact_name=$(ls ${{github.workspace}}/target | grep jar)" >> $GITHUB_ENV
          #echo "release_version=$(ls ${{github.workspace}}/target | grep jar | egrep -o '[[:digit:]].[[:digit:]].[[:digit:]]' -o)" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.tag_version.outputs.new_tag }}
          path: target/*.jar
          
  deploy-to-DEV:
    needs: build-release
    runs-on: ubuntu-latest
    environment: 'DEV'

    steps:
      - name: deploy-to-DEV
        run: echo Deploy to DEV    
        
  tests-DEV:
    needs: deploy-to-DEV
    runs-on: ubuntu-latest

    steps:
      - name: tests
        run: echo Running tests    
        
  post-DEV:
    needs: tests-DEV
    runs-on: ubuntu-latest

    steps:
      - name: post
        run: echo Running post actions

  deploy-to-QA:
    needs: post-DEV
    runs-on: ubuntu-latest
    environment: 'QA'

    steps:
      - name: deploy-to-QA
        run: echo Deploy to QA    
        
  tests-QA:
    needs: deploy-to-QA
    runs-on: ubuntu-latest

    steps:
      - name: tests
        run: echo Running tests    
        
  post-QA:
    needs: tests-QA
    runs-on: ubuntu-latest

    steps:
      - name: post
        run: echo Running post actions

  deploy-to-UA:
    needs: post-QA
    runs-on: ubuntu-latest
    environment: 'UA'

    steps:
      - name: deploy-to-UA
        run: echo Deploy to UA    
        
  tests-UA:
    needs: deploy-to-UA
    runs-on: ubuntu-latest

    steps:
      - name: tests
        run: echo Running tests    
        
  post-UA:
    needs: tests-UA
    runs-on: ubuntu-latest

    steps:
      - name: post
        run: echo Running post actions
        
  deploy-to-PRO:
    needs: post-UA
    runs-on: ubuntu-latest
    environment: 'PRO'

    steps:
      - name: deploy-to-PRO
        run: echo Deploy to PRO    
        
  tests-PRO:
    needs: deploy-to-PRO
    runs-on: ubuntu-latest

    steps:
      - name: tests
        run: echo Running tests    
        
  post-PRO:
    needs: tests-PRO
    runs-on: ubuntu-latest
    
    steps:
      - name: post
        run: echo Running post actions
